<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Playnite.FullscreenApp"
    xmlns:controls="clr-namespace:Playnite.Controls;assembly=Playnite"
    xmlns:pctrls="clr-namespace:Playnite.FullscreenApp.Controls">

    <Style x:Key="ChildWindowStyle" TargetType="WindowBase">
        <!-- 01000000 background is there for mouse hit detection and custom cursor
             to work on transparent window area -->
        <Setter Property="Background" Value="#01000000" />
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="BlockAltF4" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type WindowBase}">
                    <Border Background="{TemplateBinding Background}">
                        <AdornerDecorator>
                            <ContentPresenter />
                        </AdornerDecorator>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MainWindowStyle" TargetType="WindowBase">
        <Setter Property="Background" Value="Black" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CaptionHeight="0" CornerRadius="0" ResizeBorderThickness="0"
                              NonClientFrameEdges ="None" UseAeroCaptionButtons="False" GlassFrameThickness="0"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type WindowBase}">
                    <AdornerDecorator>
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter />
                            <Border Background="{DynamicResource OverlayBrush}"
                                    x:Name="BorderDim" Visibility="Collapsed" />
                        </Grid>
                    </AdornerDecorator>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding ChildOpened, Delay=1000}" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="BorderDim"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
